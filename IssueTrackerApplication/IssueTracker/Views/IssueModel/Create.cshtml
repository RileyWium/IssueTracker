@model IssueTracker.ViewModels.IssueCreationViewModel

@{
    ViewBag.Title = "Create Issue";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <div class="col-md-10 control-label">
            @Html.HiddenFor(model => model.Issue.ProjID, new { Value = Model.ProjectID })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issue.IssName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issue.IssName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Issue.IssName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issue.ReportDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 control-label">
            @*might need to change*@
            @DateTime.Now
            @Html.HiddenFor(model => model.Issue.ReportDate, new { Value = Model.CurrentDate })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issue.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issue.DueDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Issue.DueDate, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Issue.IssDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issue.IssDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Issue.IssDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-10" for="IssAssigneeName">Assign Issue</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Issue.IssAssigneeName, Model.AssigneeUsers, "No Assignment", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issue.IssReporterName, new { @class = "control-label col-md-2" })
        <div class="col-md-10 control-label">
            @Html.DisplayName(Model.ReporterMainName)
            @Html.HiddenFor(model => model.Issue.IssReporterName, new { Value = Model.ReporterMainName })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issue.IssStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Issue.IssStatus, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Issue.IssStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issue.IssPriority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Issue.IssPriority, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Issue.IssPriority, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Back to Issues", "Index", new { projID = Model.ProjectID})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
